(function(){var e={341:function(){let{Component:e}=Shopware;e.override("sw-product-detail",{computed:{productCriteria(){let e=this.$super("productCriteria");return e.addAssociation("bundles"),e}}})},149:function(){let{Component:e}=Shopware;e.extend("product-bundle-create","product-bundle-detail",{methods:{getBundle(){this.bundle=this.repository.create(Shopware.Context.api)},onClickSave(){this.isLoading=!0,this.repository.save(this.bundle,Shopware.Context.api).then(()=>{this.isLoading=!1,this.$router.push({name:"product.bundle.detail",params:{id:this.bundle.id}})}).catch(e=>{this.isLoading=!1,this.createNotificationError({title:this.$t("product-bundle.detail.errorTitle"),message:e})})}}})}},t={};function n(i){var o=t[i];if(void 0!==o)return o.exports;var s=t[i]={exports:{}};return e[i](s,s.exports,n),s.exports}n.p="bundles/productbundle/",window?.__sw__?.assetPath&&(n.p=window.__sw__.assetPath+"/bundles/productbundle/"),function(){"use strict";let{Component:e}=Shopware,{Criteria:t}=Shopware.Data;e.register("product-bundle-list",{template:'{% block swag_bundle_list %}\n    <sw-page class="swag-bundle-list">\n        {% block swag_bundle_list_smart_bar_actions %}\n            <template slot="smart-bar-actions">\n                <sw-button variant="primary" :routerLink="{ name: \'product.bundle.create\' }">\n                    {{ $t(\'product-bundle.list.addButtonText\') }}\n                </sw-button>\n            </template>\n        {% endblock %}\n\n        <template slot="content">\n            {% block swag_bundle_list_content %}\n                <sw-entity-listing\n                    v-if="bundles"\n                    :items="bundles"\n                    :repository="repository"\n                    :showSelection="false"\n                    :columns="columns"\n                    detailRoute="product.bundle.detail">\n                </sw-entity-listing>\n            {% endblock %}\n        </template>\n    </sw-page>\n{% endblock %}\n',inject:["repositoryFactory"],data(){return{repository:null,bundles:null}},metaInfo(){return{title:this.$createTitle()}},computed:{columns(){return[{property:"name",dataIndex:"name",label:this.$t("product-bundle.list.columnName"),routerLink:"swag.bundle.detail",inlineEdit:"string",allowResize:!0,primary:!0},{property:"discount",dataIndex:"discount",label:this.$t("product-bundle.list.columnDiscount"),inlineEdit:"number",allowResize:!0},{property:"discountType",dataIndex:"discountType",label:this.$t("product-bundle.list.columnDiscountType"),allowResize:!0}]}},created(){this.repository=this.repositoryFactory.create("product_bundle"),this.repository.search(new t,Shopware.Context.api).then(e=>{this.bundles=e})}});let{Component:i,Mixin:o}=Shopware;i.register("product-bundle-detail",{template:'{% block swag_bundle_detail %}\n    <sw-page class="swag-bundle-detail">\n        <template slot="smart-bar-actions">\n            <sw-button :routerLink="{ name: \'swag.bundle.list\' }">\n                {{ $t(\'swag-bundle.detail.cancelButtonText\') }}\n            </sw-button>\n\n            <sw-button-process\n                :isLoading="isLoading"\n                :processSuccess="processSuccess"\n                variant="primary"\n                @process-finish="saveFinish"\n                @click="onClickSave">\n                {{ $t(\'swag-bundle.detail.saveButtonText\') }}\n            </sw-button-process>\n        </template>\n\n        <template slot="content">\n            <sw-card-view>\n                <sw-card v-if="bundle" :isLoading="isLoading">\n                    <sw-field :label="$t(\'swag-bundle.detail.nameLabel\')" v-model="bundle.name"></sw-field>\n                    <sw-field :label="$t(\'swag-bundle.detail.discountLabel\')" v-model="bundle.discount" type="number"></sw-field>\n\n                    <sw-field type="radio"\n                              :label="$t(\'swag-bundle.detail.discountTypeLabel\')"\n                              v-model="bundle.discountType"\n                              :options="options">\n                    </sw-field>\n\n                    <sw-entity-many-to-many-select\n                        :localMode="bundle.isNew()"\n                        :label="$t(\'swag-bundle.detail.assignProductsLabel\')"\n                        v-model="bundle.products">\n                    </sw-entity-many-to-many-select>\n                </sw-card>\n            </sw-card-view>\n        </template>\n    </sw-page>\n{% endblock %}\n',inject:["repositoryFactory"],mixins:[o.getByName("notification")],metaInfo(){return{title:this.$createTitle()}},data(){return{bundle:null,isLoading:!1,processSuccess:!1,repository:null}},computed:{options(){return[{value:"absolute",name:this.$t("product-bundle.detail.absoluteText")},{value:"percentage",name:this.$t("product-bundle.detail.percentageText")}]}},created(){this.repository=this.repositoryFactory.create("product_bundle"),this.getBundle()},methods:{getBundle(){this.repository.get(this.$route.params.id,Shopware.Context.api).then(e=>{this.bundle=e})},onClickSave(){this.isLoading=!0,this.repository.save(this.bundle,Shopware.Context.api).then(()=>{this.getBundle(),this.isLoading=!1,this.processSuccess=!0}).catch(e=>{this.isLoading=!1,this.createNotificationError({title:this.$t("product-bundle.detail.errorTitle"),message:e})})},saveFinish(){this.processSuccess=!1}}}),n(149);var s=JSON.parse('{"product-bundle":{"general":{"mainMenuItemGeneral":"My custom module","descriptionTextModule":"Manage this custom module here"}}}'),a=JSON.parse('{"product-bundle":{"general":{"mainMenuItemGeneral":"My custom module","descriptionTextModule":"Manage this custom module here"}}}');Shopware.Module.register("product-bundle",{type:"plugin",name:"Example",title:"product-bundle.general.mainMenuItemGeneral",description:"sw-property.general.descriptionTextModule",color:"#ff3d58",icon:"default-shopping-paper-bag-product",snippets:{"de-DE":s,"en-GB":a},routes:{list:{component:"product-bundle-list",path:"list"},detail:{component:"product-bundle-detail",path:"detail/:id",meta:{parentPath:"product.bundle.list"}},create:{component:"product-bundle-create",path:"create",meta:{parentPath:"product.bundle.list"}}},navigation:[{label:"product-bundle.general.mainMenuItemGeneral",color:"#ff3d58",path:"product.bundle.list",icon:"default-shopping-paper-bag-product",parent:"sw-catalogue",position:100}]});let{Component:r}=Shopware;r.override("sw-product-detail-base",{template:'{% block sw_product_detail_attribute_sets %}\n    {% parent() %}\n    <sw-card :title="$t(\'sw-product.detail.bundleCardLabel\')"\n             :isLoading="isLoading">\n        <sw-inherit-wrapper v-if="!isLoading"\n                            v-model="product.extensions.bundles"\n                            :inheritedValue="parentProduct.extensions ? parentProduct.extensions.bundles : null"\n                            :hasParent="!!parentProduct.id"\n                            :label="$t(\'sw-product.detail.bundleSelectLabel\')"\n                            isAssociation\n                            @inheritance-remove="saveProduct"\n                            @inheritance-restore="saveProduct">\n            <template #content="{ currentValue, isInherited, updateCurrentValue }">\n                <sw-entity-many-to-many-select\n                    :localMode="product.isNew()"\n                    :entityCollection="currentValue"\n                    @input="updateCurrentValue"\n                    labelProperty="name"\n                    :disabled="isInherited"\n                    :key="isInherited"\n                    :placeholder="$t(\'sw-product.detail.bundleSelectPlaceholder\')">\n                </sw-entity-many-to-many-select>\n            </template>\n        </sw-inherit-wrapper>\n    </sw-card>\n{% endblock %}\n',computed:{productRepository(){return this.repositoryFactory.create("product")}},methods:{saveProduct(){this.product&&this.productRepository.save(this.product,Shopware.Context.api)}}}),n(341)}()})();